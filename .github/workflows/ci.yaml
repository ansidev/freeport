name: ci

on:
  push:
    branches:
      - main
      - release/**
    tags:
      - "v*.*.*"
    paths:
      - '.github/workflows/ci.yaml'
      - '*.go'
      - 'go.mod'
      - 'go.sum'
      - 'cmd/**'
  pull_request:
    branches:
      - main

env:
  GOLANG_CI_LINT_VERSION: v1.50.1

jobs:
  CI:
    name: CI
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go_version: [1.16.x, 1.17.x, 1.18.x, 1.19.x]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go
        id: set_up
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go_version }}

      - name: Checkout repository
        id: check_out
        uses: actions/checkout@v3

      - name: Lint code
        id: lint
        uses: golangci/golangci-lint-action@v3.3.1
        with:
          version: ${{ env.GOLANG_CI_LINT_VERSION }}
          args: --timeout=3m

      - name: Build
        id: build
        run: go build -o /tmp/freeport ./cmd

      - name: Test
        id: test
        run: go test -v ./...

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        id: run_goreleaser
        uses: goreleaser/goreleaser-action@v3
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
